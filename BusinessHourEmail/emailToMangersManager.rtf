{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class emailToMangersManager \{\
    @InvocableMethod(label='Email To ManagersManagers' description='set Email Reminder Time')\
    public static void sendingMailToOwner(List<Id> caseId)\
    \{\
        System.debug('caseid' + caseId);\
        List<Case> caseList =[Select Id,caseNumber,Owner.Id,Owner.email,status from case where id in: caseId ];\
        id ownerId=caseList[0].Owner.Id;\
        User myUser=[select id,manager.email From User Where Id=:ownerId];\
        String mangerEmail=myUser.manager.email;\
        Map<Id,Id> caseUserIdMap=new Map<Id,Id>();\
        Map<Id,Id> ownerCaseIdMap=new Map<Id,Id>();\
        \
        for(Case caseObj:caseList)\{\
            caseUserIdMap.put(caseObj.Owner.Id,caseObj.Id);\
            ownerCaseIdMap.put(caseObj.Id,caseObj.Owner.Id);\
        \}\
        Map<Id,string> caseIdToManagerEmailMap=new Map<Id,String>(); \
        Map<Id,string> caseIdToManagersManagersEmailMap=new Map<Id,String>(); \
        Map<Id,string> caseIdToManagerIdMap=new Map<Id,String>(); \
        set<Id> userIdSet=caseUserIdMap.keySet();\
        List<User> userList=[select id,manager.Id,manager.email,manager.name,manager.manager.email from user where Id In: userIdSet];\
        System.debug('userList '+userList);\
        for(User userObj:userList)\{\
            if(caseUserIdMap.get(userObj.Id)!=null && userObj.manager.email!=null )\
                caseIdToManagerEmailMap.put(caseUserIdMap.get(userObj.id), userObj.manager.email);\
            \
            if(caseUserIdMap.get(userObj.Id)!=null && userObj.manager.Id!=null)\
                caseIdToManagerIdMap.put(userObj.manager.Id,caseUserIdMap.get(userObj.id));  \
            if(caseUserIdMap.get(userObj.Id)!=null && userObj.manager.manager.email!=null)\{\
                caseIdToManagersManagersEmailMap.put(caseUserIdMap.get(userObj.id),userObj.manager.manager.email);\
            \}\
            \
        \}\
        /* set<Id> ownerManagersManagersIdSet=caseIdToManagerIdMap.keySet();\
List<User> ManagerList=[select id,manager.Id,manager.email,manager.name from user where Id In: ownerManagersManagersIdSet];\
for(User managObj:ManagerList)\{\
if(caseIdToManagerIdMap.get(managObj.Id)!=null && managObj.manager.email!=null)\{\
caseIdToManagersManagersEmailMap.put(caseIdToManagerIdMap.get(managObj.Id),managObj.manager.email);\
\}\
\}*/\
        \
        System.debug('caseList '+caseList);\
        List<Messaging.SingleEmailMessage> mails = new List<Messaging.SingleEmailMessage>();\
        \
        //String body=setBodyValues('et.HtmlValue,ncParams');\
       \
        List<String> ccTo = new List<String>();\
        ccTo.add(UserInfo.getUserEmail());\
        // string emailadd = userinfo.getUserEmail();\
        OrgWideEmailAddress owea = new OrgWideEmailAddress();\
        owea = [SELECT Id, Address, DisplayName FROM OrgWideEmailAddress limit 1];\
        for(Case c:caseList)\{\
             List<String> sendTo = new List<String>();\
            if(c.Status=='New' )\{\
                String emailTo=caseIdToManagerEmailMap.get(c.Id);\
                //  String emailTo=caseIdToManagersManagersEmailMap.get(c.Id);\
                System.debug('emailTo '+emailTo);\
                //if(emailTo!=null)\
                \
                  sendTo.add(mangerEmail);\
                \
                Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();\
                if ( owea != null) \{\
                    mail.setOrgWideEmailAddressId(owea.Id);\
                \}\
                if(sendTo.size()>0)\{\
                    mail.setToAddresses(sendTo);\
                    mail.setSubject('et.Subject');\
                    //mail.setHtmlBody(et.Body);\
                    mail.setTreatTargetObjectAsRecipient(true);\
                    mail.setTargetObjectId(UserInfo.getUserId());\
                    mail.setSaveAsActivity(false);\
                    mail.setHtmlBody('hello anand');\
                    mails.add(mail); \
                \}\
                \
                \
                \
            \}\
            \
        \}\
\
        if(mails.size()>0)\
            Messaging.sendEmail(mails);\
        else\
            return ;\
    \}\
\}}