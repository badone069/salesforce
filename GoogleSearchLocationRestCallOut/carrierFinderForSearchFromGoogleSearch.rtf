{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public with sharing class carrierFinder \{\
    public String autocomplete \{get;set;\}\
 \
    \
    /* public carrierFinder (ApexPages.StandardController controller) \{\
autocomplete = System.currentPageReference().getParameters().get('response');\
\}*/\
    @AuraEnabled\
    public static list<accountLocationWrapper> getLocation( String addresses)\{\
      \
        System.debug('addresses' +addresses);\
        Map<String,Object> adressMap=(Map<String,Object>)(JSON.deserializeUntyped(addresses));\
        System.debug('adressMap '+adressMap);\
        String City = adressMap.containsKey('city')?adressMap.get('city').toString().replaceAll( '\\\\s+', '+'):'';\
        string name =adressMap.containsKey('street') ? adressMap.get('street').toString() : '';\
        string state = adressMap.containsKey('state')?adressMap.get('state').toString().replaceAll( '\\\\s+', '+'):'';\
        String Zip = adressMap.containsKey('zipCode')?adressMap.get('zipCode').toString():'';\
        name= name.replaceAll( '\\\\s+', '+');\
       \
        string address = name+','+City+','+state+','+Zip;\
        System.debug('address. '+address);\
        //system.debug('recordId : '+recordId);\
        // Site_Prequal__c site =[SELECT Id, Name,  CIty__c, State__c, Zip__c FROM Site_Prequal__c where id=:recordId];\
        //string name =site.Name;\
        //name= name.replaceAll( '\\\\s+', '+');\
        list<accountLocationWrapper> lstALW = new list<accountLocationWrapper>();\
        /*Query accounts records with billing address information */\
        Http h = new Http();\
        HttpRequest req = new HttpRequest();\
        if(!String.isBlank(address))\{\
             req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+address+'&radius=5280&count=10&carrier_count=1&state=WA&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');  \
              //req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+City+','+'&radius=10000&state='+state+',' + '&zipcode='+Zip+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');   \
             //req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address=509,TX,78613&radius=5280&count=10&carrier_count=1&state=WA&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
        \}\
      /*  if(City != null && state != null && name == '' && Zip == null)\{\
            System.debug('if1');\
            req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+City+','+'&radius=10000&state='+state+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');    \
            \
        \} else if(Zip != null && City != null && state != null   && name == '')\{\
            System.debug('Elseif1');\
            req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+City+','+'&radius=10000&state='+state+',' + '&zipcode='+Zip+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');       \
        \}\
        else if(state != null && name != null && City !=null && Zip != null)\{\
            System.debug('Elseif2');\
        req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+address+'&radius=5280&count=10&carrier_count=1&state=WA&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');      \
        \}\
       else\{\
            System.debug('Else');\
          req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+name+'&radius=5280&count=10&carrier_count=1&state='+state+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');    \
\
        \} */\
        \
        req.setMethod('GET');\
        req.setTimeout(120000);\
        HttpResponse res = h.send(req);\
        Map<String, Object> results = (Map<String, Object>)JSON.deserializeUntyped(res.getBody());\
        System.debug('results==>' + results);\
        String token = '';\
        List<Map<String, Object>> data = new List<Map<String, Object>>();\
        for (Object instance : (List<Object>)results.get('site'))\
            data.add((Map<String, Object>)instance);\
        map<string,integer> mapWrapData = new map<string,integer>();\
        map<string,integer> mapCountCarrier = new map<string,integer>();\
        if(data.size()> 0)\{\
            string distance = ((string)data[0].get('distance'));\
            \
            \
            for(Integer i=0; i<data.size();i++)\{\
                if(mapWrapData.containskey((string)data[i].get('distance')))\{\
                    integer j = mapWrapData.get((string)data[i].get('distance'));\
                    integer k = mapCountCarrier.get((string)data[i].get('distance'));\
                    lstALW[j].title = '('+k+') carrier found';\
                    lstALW[j].description =lstALW[j].description +'<br/>'+(String)data[i].get('carriername')+' <b>('+(String)data[i].get('carriertype')+')</b>';          \
                    mapCountCarrier.put((string)data[i].get('distance'),k+1);\
                \}else if(lstALW.size()<=10)\{\
                    // first create "locationDetailWrapper" instance and set appropriate values\
                    locationDetailWrapper oLocationWrap = new locationDetailWrapper();\
                    oLocationWrap.Street = (String)data[i].get('street');\
                    oLocationWrap.PostalCode =(String)data[i].get('zipcode');\
                    oLocationWrap.City =(String)data[i].get('city');\
                    oLocationWrap.State = (String)data[i].get('state');\
                    // create "accountLocationWrapper" instance, set values and add to final list. \
                    accountLocationWrapper oWrapper = new accountLocationWrapper();\
                    oWrapper.icon = 'utility:location'; // https://www.lightningdesignsystem.com/icons/#utility\
                    oWrapper.title = '(1) carrier found.';\
                    if((string)data[i].get('distance')=='0')\{\
                        oWrapper.description = (String)data[i].get('site_address')+' <br/> '+(String)data[i].get('carriername')+' <b>('+(String)data[i].get('carriertype')+')</b>';  \
                    \}else\{\
                        oWrapper.description = '<b>'+(String)data[i].get('site_address')+'</b> <br/> Location '+(String)data[i].get('distance')+'ft from searcher loaction <br/><br/>'+(String)data[i].get('carriername')+' <b>('+(String)data[i].get('carriertype')+')</b>';\
                    \}\
                    oWrapper.location = oLocationWrap;\
                    lstALW.add(oWrapper);\
                    system.debug('lstALW list length : '+lstALW.size());\
                    mapWrapData.put((string)data[i].get('distance'),lstALW.size()-1); \
                    mapCountCarrier.put((string)data[i].get('distance'),2);\
                \}\
                \
            \}\
        \}\
        if(!mapWrapData.containskey('0'))\{\
            locationDetailWrapper oLocationWrap = new locationDetailWrapper();\
            oLocationWrap.Street = name;\
            oLocationWrap.PostalCode =Zip;\
            oLocationWrap.City =City;\
            oLocationWrap.State = state;\
            // create "accountLocationWrapper" instance, set values and add to final list. \
            accountLocationWrapper oWrapper = new accountLocationWrapper();\
            oWrapper.icon = 'utility:location'; // https://www.lightningdesignsystem.com/icons/#utility\
            oWrapper.title = '(0) carrier found at searcher loaction';\
            oWrapper.location = oLocationWrap;\
            lstALW.add(oWrapper);\
        \}\
        // retrun the accountLocationWrapper list\
        system.debug('lstALW : '+lstALW); \
        system.debug('lstALW discription: '+lstALW[0].description);\
        return lstALW;\
    \}\
    \
    \
    \
    \
    @AuraEnabled\
    public static Map<String,Object> get_telcoinfo(string addresses)\{\
        System.debug('dee');\
        //Site_Prequal__c site =[SELECT Id, Name,  CIty__c, State__c, Zip__c FROM Site_Prequal__c where id=:recordId];\
        //String City ='patna';\
Map<String,Object> adressMap=(Map<String,Object>)(JSON.deserializeUntyped(addresses));\
        System.debug('adressMap '+adressMap);\
       String City = adressMap.containsKey('city')?adressMap.get('city').toString().replaceAll( '\\\\s+', '+'):'';\
        string name =adressMap.containsKey('street') ? adressMap.get('street').toString() : '';\
        string state = adressMap.containsKey('state')?adressMap.get('state').toString().replaceAll( '\\\\s+', '+'):'';\
        String Zip = adressMap.containsKey('zipCode')?adressMap.get('zipCode').toString():'';\
        name= name.replaceAll( '\\\\s+', '+');\
       \
        string address = name+','+City+','+state+','+Zip;\
        \
        \
        Http h = new Http();\
        HttpRequest req = new HttpRequest();\
        \
        req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_telcoinfo&method=address&address='+address+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
        //req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_telcoinfo&method=address&address='+address+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
        req.setMethod('GET');\
        req.setTimeout(120000);\
        HttpResponse res = h.send(req);\
         System.debug('res ==??' + (res.getBody()) );\
        Map<String, Object> results = (Map<String, Object>)JSON.deserializeUntyped(res.getBody());\
        system.debug('results get_telcoinfo ===>'+results);\
        return results;\
    \}\
    \
    @AuraEnabled\
    public static Map<String,Object> get_cableco(string addresses)\{\
        System.debug('CableCo' + addresses );\
       Map<String,Object> adressMap=(Map<String,Object>)(JSON.deserializeUntyped(addresses));\
        System.debug('CableCo1 '+adressMap);\
        String City = adressMap.containsKey('city')?adressMap.get('city').toString().replaceAll( '\\\\s+', '+'):'';\
        string name =adressMap.containsKey('street') ? adressMap.get('street').toString().replaceAll( '\\\\s+', '+') : '';\
        string state = adressMap.containsKey('state')?adressMap.get('state').toString().replaceAll( '\\\\s+', '+'):'';\
        String Zip = adressMap.containsKey('zipCode')?adressMap.get('zipCode').toString():'';\
       \
       \
        string address = name+','+City+','+state+','+Zip;\
        \
        \
        Http h = new Http();\
        HttpRequest req = new HttpRequest();\
        \
        //req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_cableco&method=explicit&street='+name+'&city='+City+'&state='+state+'&zipcode='+Zip+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
       req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_cableco&method=address&address='+address+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
        req.setMethod('GET');\
        req.setTimeout(120000);\
        HttpResponse res = h.send(req);\
        System.debug('Response ===>>' + res.getBody());\
        Map<String, Object> results = (Map<String, Object>)JSON.deserializeUntyped(res.getBody());\
       system.debug('results get_cableco'+results);\
        return results;\
       \
    \}\
    \
    @AuraEnabled\
    public static Map<String,Object> get_Building(string addresses)\{\
        System.debug('get_Building' + addresses );\
       Map<String,Object> adressMap=(Map<String,Object>)(JSON.deserializeUntyped(addresses));\
        System.debug('CableCo1 '+adressMap);\
        String City = adressMap.containsKey('city')?adressMap.get('city').toString().replaceAll( '\\\\s+', '+'):'';\
        string name =adressMap.containsKey('street') ? adressMap.get('street').toString() : '';\
        string state = adressMap.containsKey('state')?adressMap.get('state').toString().replaceAll( '\\\\s+', '+'):'';\
        String Zip = adressMap.containsKey('zipCode')?adressMap.get('zipCode').toString():'';\
        name= name.replaceAll( '\\\\s+', '+');\
       \
        string address = name+','+City+','+state+','+Zip;\
        \
        Http h = new Http();\
        HttpRequest req = new HttpRequest();\
        req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+address+'&radius=5280&count=10&carrier_count=1&state=WA&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
       //req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_cableco&method=explicit&street='+name+'&zipcode='+Zip+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
        req.setMethod('GET');\
        req.setTimeout(120000);\
        HttpResponse res = h.send(req);\
        System.debug('Response ===>>' + res.getBody());\
        Map<String, Object> results = (Map<String, Object>)JSON.deserializeUntyped(res.getBody());\
        System.debug('results get_Building ===>>' + results);\
        return results;\
       \
    \}\
    \
    @AuraEnabled\
    public static Map<String,Object> get_footPrint(string addresses)\{\
        System.debug('get_Building' + addresses );\
       Map<String,Object> adressMap=(Map<String,Object>)(JSON.deserializeUntyped(addresses));\
        System.debug('CableCo1 '+adressMap);\
        String City = adressMap.get('city').toString();\
        string name =adressMap.get('street').toString();\
        string state = adressMap.get('state').toString();\
        String Zip = adressMap.get('zipCode').toString();        \
        System.debug('CloudAddresses' + addresses);\
        \
      /*   String City = 'Humble';\
        string name ='16848 West Lake Houston Parkway';\
        string state ='TX';\
        String Zip = '77346';*/\
        name= name.replaceAll( '\\\\s+', '+');\
       \
        string address = name+','+City+','+state+','+Zip;\
        \
        \
        Http h = new Http();\
        HttpRequest req = new HttpRequest();\
        req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_litbuildings&method=address&address='+address+'&radius=5280&count=10&carrier_count=1&state=WA&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
       //req.setEndpoint('http://api.carrierfinder.net/api.py?function=get_cableco&method=explicit&street='+name+'&zipcode='+Zip+'&key=d9166e6f-3afa-4e24-9f74-e10549fe6f7a');\
        req.setMethod('GET');\
        req.setTimeout(120000);\
        HttpResponse res = h.send(req);\
        System.debug('Response ===>>' + res.getBody());\
        Map<String, Object> results = (Map<String, Object>)JSON.deserializeUntyped(res.getBody());\
        System.debug('results ===>>' + results);\
        return results;\
       \
    \}\
    \
    /* wrapper class to store required properties for "lightning:map" component' */ \
    public class accountLocationWrapper\{\
        @AuraEnabled public string icon\{get;set;\} \
        @AuraEnabled public string title\{get;set;\} \
        @AuraEnabled public string description\{get;set;\} \
        @AuraEnabled public locationDetailWrapper location\{get;set;\} \
    \}\
    /* sub wrapper class to store location details for "accountLocationWrapper" location property.*/ \
    public class locationDetailWrapper\{\
        @AuraEnabled public string Street\{get;set;\}\
        @AuraEnabled public string PostalCode\{get;set;\}\
        @AuraEnabled public string City\{get;set;\}\
        @AuraEnabled public string State\{get;set;\}\
        @AuraEnabled public string Country\{get;set;\}        \
    \}\
\
   \
\}}